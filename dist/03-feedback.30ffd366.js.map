{"mappings":"AAAA,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAgB;AACvD,OAAO,CAAC,GAAG,CAAC,OAAO;AAEnB,EAAO,AAAP,OAAS;AACP,EAAkK,AAApK,uRAAyR;AACpK,EAApD,AAAjE,iGAAmG;AACjE,EAA8H,AAAhK,iSAAmS;AAChK,EAAE,AAArI,iOAAmO;AACrI,EAAiD,AAA/I,gPAA+I;AAE/I,KAAK,CAAC,WAAW,IAAG,CAAC,GAAI,CAAC;IACxB,KAAK,CAAC,CAAC,CACL,QAAQ,EAAE,CAAC,CAAC,KAAK,GAAE,OAAO,EAAC,CAAC,IAC9B,CAAC,GAAG,CAAC,CAAC,aAAa;IAEnB,KAAK,CAAC,QAAQ,GAAG,CAAC;QAChB,QAAQ,EAAE,KAAK,CAAC,KAAK;QACrB,WAAW,EAAE,OAAO,CAAC,KAAK;IAC5B,CAAC;IACD,YAAY,CAAC,OAAO,CAAC,CAAqB,sBAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;AACrE,CAAC;AACD,KAAK,CAAC,YAAY,IAAG,CAAC,GAAI,CAAC;IACzB,CAAC,CAAC,cAAc;IAChB,KAAK,CAAC,CAAC,CACL,QAAQ,EAAE,CAAC,CAAC,KAAK,GAAE,OAAO,EAAC,CAAC,IAC9B,CAAC,GAAG,CAAC,CAAC,aAAa;IACnB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAqB;IAC9C,CAAC,CAAC,aAAa,CAAC,KAAK;IACrB,YAAY,CAAC,UAAU,CAAC,CAAqB;AAC/C,CAAC;AAED,KAAK,CAAC,mBAAmB,OAAS,CAAC;IACjC,KAAK,CAAC,kBAAkB,GAAG,YAAY,CAAC,OAAO,CAAC,CAAqB;IACrE,EAAE,EAAE,kBAAkB,EAAE,CAAC;QACvB,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB;QACvD,OAAO,CAAC,GAAG,CAAC,iBAAiB;QAC7B,KAAK,CAAC,CAAC,CACL,QAAQ,EAAE,CAAC,CAAC,KAAK,GAAE,OAAO,EAAC,CAAC,IAC9B,CAAC,GAAG,OAAO;QACX,KAAK,CAAC,KAAK,GAAG,iBAAiB,CAAC,QAAQ;QACxC,OAAO,CAAC,KAAK,GAAG,iBAAiB,CAAC,WAAW;IAC/C,CAAC;AACH,CAAC;AAED,mBAAmB;AACnB,OAAO,CAAC,gBAAgB,CACtB,CAAO,QACP,CAAC,CAAC,QAAQ,KAAO,CAAC;AAElB,CAAC,EAAE,GAAG;AAER,OAAO,CAAC,gBAAgB,CAAC,CAAQ,SAAE,YAAY","sources":["src/js/03-feedback.js"],"sourcesContent":["const formRef = document.querySelector('.feedback-form');\nconsole.dir(formRef);\n\n// Т.З.\n// Отслеживай на форме событие input, и каждый раз записывай в локальное хранилище объект с полями email и message, в которых сохраняй текущие значения полей формы.\n// Пусть ключом для хранилища будет строка \"feedback-form-state\".\n// При загрузке страницы проверяй состояние хранилища, и если там есть сохраненные данные, заполняй ими поля формы. В противном случае поля должны быть пустыми.\n// При сабмите формы очищай хранилище и поля формы, а также выводи объект с полями email, message и текущими их значениями в консоль.\n// Сделай так, чтобы хранилище обновлялось не чаще чем раз в 500 миллисекунд. Для этого добавь в проект и используй библиотеку lodash.throttle.\n\nconst onFormInput = e => {\n  const {\n    elements: { email, message },\n  } = e.currentTarget;\n\n  const userData = {\n    userMail: email.value,\n    userMessage: message.value,\n  };\n  localStorage.setItem('feedback-form-state', JSON.stringify(userData));\n};\nconst onFormSubmit = e => {\n  e.preventDefault();\n  const {\n    elements: { email, message },\n  } = e.currentTarget;\n  console.log(localStorage('feedback-form-state'));\n  e.currentTarget.reset();\n  localStorage.removeItem('feedback-form-state');\n};\n\nconst populateTextMessage = () => {\n  const currentInputValues = localStorage.getItem('feedback-form-state');\n  if (currentInputValues) {\n    const parsedInputValues = JSON.parse(currentInputValues);\n    console.log(parsedInputValues);\n    const {\n      elements: { email, message },\n    } = formRef;\n    email.value = parsedInputValues.userMail;\n    message.value = parsedInputValues.userMessage;\n  }\n};\n\npopulateTextMessage();\nformRef.addEventListener(\n  'input',\n  _.throttle(() => {\n    onFormInput;\n  }, 500),\n);\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":[],"version":3,"file":"03-feedback.30ffd366.js.map","sourceRoot":"/__parcel_source_root/"}